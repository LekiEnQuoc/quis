local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Đợi nhân vật load
player.CharacterAdded:Wait()
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

-- Kim la bàn
local arrow = workspace.arpishanettan31.Compass.CompassArrow

local function getCorners(model)
    local pivot = model:GetPivot()
    local size = model:GetExtentsSize()
    local half = size / 2
    return {
        pivot.Position + pivot.RightVector * half.X + pivot.LookVector * half.Z,
        pivot.Position - pivot.RightVector * half.X + pivot.LookVector * half.Z,
        pivot.Position + pivot.RightVector * half.X - pivot.LookVector * half.Z,
        pivot.Position - pivot.RightVector * half.X - pivot.LookVector * half.Z,
    }
end

local function findTrees()
    local origin = arrow.Position
    local dir = arrow.CFrame.LookVector
    local flatDir = Vector3.new(dir.X, 0, dir.Z).Unit
    local found = {}

    for _, tree in ipairs(workspace.Trees:GetChildren()) do
        local ok, pivot = pcall(function() return tree:GetPivot() end)
        if ok and pivot then
            local treePos = pivot.Position
            local vecToTree = Vector3.new(treePos.X - origin.X, 0, treePos.Z - origin.Z)
            local dist = vecToTree.Magnitude
            if dist > 0 then
                local dot = flatDir:Dot(vecToTree.Unit)
                if dot > 0.95 then
                    table.insert(found, tree)
                end
            end
        end
    end
    return found
end

-- Gõ phím T để teleport tới góc 1 của tất cả cây theo hướng
local UIS = game:GetService("UserInputService")

UIS.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.T then
        local trees = findTrees()
        if #trees == 0 then
            warn("Không có cây nào theo hướng kim")
            return
        end

        for _, tree in ipairs(trees) do
            local corners = getCorners(tree)
            if corners[1] then
                hrp.CFrame = CFrame.new(corners[1] + Vector3.new(0,5,0), tree:GetPivot().Position)
                print("Teleported tới:", tree.Name, "at góc:", corners[1])
                task.wait(1) -- dừng 1s rồi sang cây tiếp theo
            end
        end
    end
end)
